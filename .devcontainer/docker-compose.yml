version: '3.8'
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  app:
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer 
    # folder. Note that the path of the Dockerfile and context is relative to the *primary* 
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    build:
      context: ../.
      dockerfile: .devcontainer/Dockerfile
    depends_on:
      - app_psql
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ../..:/workspaces:cached

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST: app_psql
      POSTGRES_DB: vpn_api
    command: /bin/sh -c "while sleep 1000; do :; done"
    networks:
      - microservices

  app_psql:
    container_name: app_psql
    image: postgres:15.0
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: vpn_api
    networks:
      - microservices

networks:
  microservices:
    name: microservices
    external: true
